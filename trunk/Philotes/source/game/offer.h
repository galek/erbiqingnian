//----------------------------------------------------------------------------
// FILE: offer.h
//
// (C)Copyright 2006, Flagship Studios. All rights reserved.
//----------------------------------------------------------------------------

#ifdef __OFFER_H_
//#pragma message ("    HINT: " __FILE__ " included multiple times in this translation unit")
#else
#define __OFFER_H_

//----------------------------------------------------------------------------
// Include
//----------------------------------------------------------------------------
#ifndef _PLAYER_H_
#include "player.h"
#endif

#ifndef __S_REWARD_H_
#include "s_reward.h"
#endif

#include "../data/excel/offer_hdr.h"			// auto generated by offer.xls

//----------------------------------------------------------------------------
// Forward Declarations
//----------------------------------------------------------------------------
struct UNIT;
struct ITEMSPAWN_RESULT;

//----------------------------------------------------------------------------
// Types
//----------------------------------------------------------------------------

//----------------------------------------------------------------------------
enum OFFER_CONSTANTS
{
	MAX_OFFER_OPTIONS = 8,
	MAX_OFFERINGS = 16,
};

//----------------------------------------------------------------------------
struct OFFER_OPTION
{
	int nUnitType;
	int nTreasure;
};

//----------------------------------------------------------------------------
struct OFFER_DEFINITION
{
	char szName[ DEFAULT_INDEX_SIZE ];		// name
	WORD wCode;								// code 
	BOOL bNoDuplicates;						// no duplicate items allowed
	BOOL bDoNotIdentify;					// don't identify the item(s)
	int nNumAllowedTakes;					// # of items that the player can take from this offer (or REWARD_TAKE_ALL)
	OFFER_OPTION tOffers[ MAX_OFFER_OPTIONS ];
	int nOfferStringKey;					// message in the UI center panel	
};

//----------------------------------------------------------------------------
// Prototypes
//----------------------------------------------------------------------------

const OFFER_DEFINITION *OfferGetDefinition(
	int nOffer);

#if !ISVERSION( CLIENT_ONLY_VERSION )
int s_OfferCreateItems(
	UNIT *pPlayer,
	int nOffer,
	ITEMSPAWN_RESULT *ptItems = NULL,
	int nTreasureOverride = INVALID_LINK,
	int nQuestTaskID = INVALID_ID,
	int nLevel = INVALID_ID);
		
BOOL s_OfferIsEmpty(
	UNIT *pPlayer,
	int nOffer,
	int nTreasureOverride = INVALID_LINK );
#endif //#if !ISVERSION( CLIENT_ONLY_VERSION )

int OfferGetExistingItems(
	UNIT *pPlayer,
	int nOffer, 
	ITEMSPAWN_RESULT &tResult,
	int nQuestTaskID = INVALID_ID );

int s_OfferDestroyAndGiveNew(
	UNIT *pPlayer,
	UNIT *pOfferer,
	int nOffer,
	const OFFER_ACTIONS &tActions);

int s_OfferDisplay(
	UNIT *pPlayer,
	UNIT *pOfferer,
	int nOffer,
	const OFFER_ACTIONS &tActions);

int s_OfferGive(
	UNIT *pPlayer,
	UNIT *pOfferer,
	int nOffer,
	const OFFER_ACTIONS &tActions);
	
void s_OfferClose(
	UNIT *pPlayer);

void s_OfferCancel(
	UNIT *pPlayer);

void s_OfferItemTaken(
	UNIT *pPlayer,
	UNIT *pItem);

enum STAT_VERSION_RESULT s_VersionStatOffer(
	STATS_FILE &tStatsFile,
	STATS_VERSION &nStatsVersion,
	UNIT *pUnit);

#endif