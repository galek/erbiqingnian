//----------------------------------------------------------------------------
// perf_hdr.h
//
// (C)Copyright 2003, Flagship Studios. All rights reserved.
//----------------------------------------------------------------------------

#ifndef INCLUDE_PERFORMANCE_TABLE

#undef  PERFENTRY
#define PERFENTRY(x, e, l)		PERF_##x,

enum
{

#else

#undef  PERFENTRY
#if !ISVERSION(SERVER_VERSION)
#define PERFENTRY(x, e, l)		{ (UINT64)0, (UINT64)0, (UINT64)0, #x, 0, 0, e, FALSE, FALSE, l },
#else
#define PERFENTRY(x, e, l)		{ (UINT64)0, (UINT64)0, (UINT64)0, #x, 0, 0, e, FALSE, TRUE, l },
#endif

__int64		gqwPerfFrames = 0;
__int64		gqwPerfFramesDisp = 0;
int			gnPerfWindow = 1000;
PERF_TABLE	gPerfTable[] = {

#endif
		// label					expand		level
PERFENTRY(APP,						TRUE,		0)
PERFENTRY(SERVER,					FALSE,		1)
PERFENTRY(SRV_PROCESS_MESSAGES,		FALSE,		2)
PERFENTRY(SRV_GAMETICK,				FALSE,		2)
PERFENTRY(SRV_HAVOK_UPDATE,			FALSE,		3)
PERFENTRY(SRV_GAME_EVENTS_PROCESS,	FALSE,		3)
PERFENTRY(SRV_GAME_PROCESS_TICK,	FALSE,		3)
PERFENTRY(SRV_UPDATE_CLIENTS,		TRUE,		4)
PERFENTRY(CLIENT,					TRUE,		1)
PERFENTRY(CLT_MSG,					TRUE,		2)
PERFENTRY(UI,						FALSE,		2)
PERFENTRY(UI_SCHED,					TRUE,		3)
PERFENTRY(UI_SCHED_PROCESS,			TRUE,		4)
PERFENTRY(ANIM_EVENT,				TRUE,		4)
PERFENTRY(UI_PROCESS_MSG,			TRUE,		4)
PERFENTRY(AUTOMAP_UPDATE,			TRUE,		4)
PERFENTRY(DEBUG_DISPLAY,			TRUE,		4)
PERFENTRY(UI_PROCESS,				TRUE,		3)
PERFENTRY(UI_RENDER,				FALSE,		3)
PERFENTRY(UI_COPY_TO_ENGINE,		FALSE,		4)
PERFENTRY(STEPPING,					FALSE,		2)
PERFENTRY(STEPPING_PATH,			TRUE,		3)
PERFENTRY(STEPPING_PATH_RESERVE,	TRUE,		4)
PERFENTRY(CLT_SIM,					FALSE,		2)
PERFENTRY(CLT_EVENTS,				TRUE,		3)
PERFENTRY(CLT_INTERPOLATE,			TRUE,		3)
PERFENTRY(SOUND_UPDATE,				FALSE,		2)
PERFENTRY(SOUND_START,				TRUE,		3)
PERFENTRY(SOUND_MEM_UPDATE,			TRUE,		3)
PERFENTRY(SOUND_MEM_LOADING,		TRUE,		4)
PERFENTRY(SOUND_MEM_HALFLIFE,		TRUE,		4)
PERFENTRY(SOUND_MEM_CLEANUP,		TRUE,		4)
PERFENTRY(SOUND_MEM_SORT,			TRUE,		4)
PERFENTRY(SOUND_MEM_REQUEST,		TRUE,		4)
PERFENTRY(SOUND_REVERB,				TRUE,		3)
PERFENTRY(MUSIC_AND_BG_UPDATE,		TRUE,		3)
PERFENTRY(FMOD_UPDATE,				TRUE,		3)
PERFENTRY(SOUND_VLOOP,				TRUE,		3)
PERFENTRY(SOUND_DVIRTUALIZE,		TRUE,		4)
PERFENTRY(SOUND_LOOP,				TRUE,		3)
PERFENTRY(SOUND_REMOVE,				TRUE,		4)
PERFENTRY(SOUND_OCCLUSION,			TRUE,		4)
PERFENTRY(SOUND_VIRTUALIZE,			TRUE,		4)
PERFENTRY(SOUND_FADE,				TRUE,		4)
PERFENTRY(DRAW,						TRUE,		2)
PERFENTRY(CULL_DPVS,				TRUE,		3)
PERFENTRY(DRAW_ROOM,				FALSE,		3)
PERFENTRY(ROOM_ALL_INVISIBLE,		TRUE,		4)
PERFENTRY(UNIT_ALL_INVISIBLE,		TRUE,		4)
PERFENTRY(ROOM_CONN_VISIBLE,		TRUE,		4)
PERFENTRY(ROOM_ALL_VISIBLE,			TRUE,		4)
PERFENTRY(ROOM_CALC_VISIBLE,		TRUE,		4)
PERFENTRY(ROOM_PROCESS_VISIBLE,		FALSE,		4)
PERFENTRY(ROOM_PROCESS_BEGIN,		TRUE,		5)
PERFENTRY(ROOM_PROCESS_END,			TRUE,		5)
PERFENTRY(ROOM_PASS_CULL,			TRUE,		6)
PERFENTRY(ROOM_PASS_BUILDML,		TRUE,		6)
PERFENTRY(ROOM_PASS_MARK,			TRUE,		6)
PERFENTRY(ROOM_PROCESS_ADD,			TRUE,		5)
PERFENTRY(UNIT_UPDATE_DRAW,			TRUE,		4)
PERFENTRY(ROOM_UPDATE_LIGHTS,		TRUE,		4)
PERFENTRY(HAVOK,					FALSE,		3)
PERFENTRY(HAVOK_SAMPLE,				TRUE,		4)
PERFENTRY(HAVOK_NOTSAMPLE,			TRUE,		4)
PERFENTRY(HAVOK_FX,					TRUE,		4)
PERFENTRY(PARTICLES,				FALSE,		3)
PERFENTRY(PART_ROPES,				TRUE,		4)
PERFENTRY(PART_SYSTEMS,				TRUE,		4)
PERFENTRY(PART_LGHTMAP,				TRUE,		5)
PERFENTRY(PART_LAUNCH,				TRUE,		5)
PERFENTRY(PART_SPAWN,				TRUE,		5)
PERFENTRY(PART_ATTRACT,				TRUE,		5)
PERFENTRY(PART_CLEANUP,				TRUE,		4)
PERFENTRY(D3D_RENDER,				FALSE,		3)
PERFENTRY(DRAW_SHADOWS,				TRUE,		4)
PERFENTRY(DRAW_MODEL,				TRUE,		4)
PERFENTRY(DRAW_MESH_DEPTH,			TRUE,		4)
PERFENTRY(DRAW_MESH_BEHIND,			TRUE,		4)
PERFENTRY(DRAW_MESH,				TRUE,		4)
PERFENTRY(DRAW_SETTINGS,			FALSE,		5)
PERFENTRY(DRAW_FX_PICK,				TRUE,		6)
PERFENTRY(DRAW_FX_BEGINPASS,		TRUE,		6)
PERFENTRY(DRAW_VBSETUP,				TRUE,		6)
PERFENTRY(DRAW_SETMESHSTATES,		TRUE,		6)
PERFENTRY(DRAW_SETMESHPRMS,			TRUE,		6)
PERFENTRY(DRAW_SETMTRLPRMS,			TRUE,		6)
PERFENTRY(DRAW_SETLIGHTPRMS,		FALSE,		6)
PERFENTRY(DRAW_SELECTLIGHTS,		TRUE,		7)
PERFENTRY(DRAW_SETTEXTURES,			TRUE,		6)
PERFENTRY(DRAW_FX_COMMIT,			TRUE,		5)
PERFENTRY(DRAW_DRAWPRIM,			TRUE,		5)
PERFENTRY(DRAW_PART,				TRUE,		4)
PERFENTRY(DRAW_BLUR,				TRUE,		4)
PERFENTRY(DRAW_UI,					TRUE,		4)
PERFENTRY(DRAW_PRESENT,				FALSE,		4)
PERFENTRY(DRAW_SYNC,				TRUE,		5)


#ifndef INCLUDE_PERFORMANCE_TABLE
PERF_LAST,
#endif 

};


#ifndef INCLUDE_PERFORMANCE_TABLE

#undef  HITENTRY
#define HITENTRY(x, e, l)		HITCOUNT_##x,

enum
{

#else

#undef  HITENTRY
#define HITENTRY(x, e, l)		{ 0, 0, #x, e, FALSE, l },

DWORD			gdwHitCountFrames = 0;
DWORD			gdwHitCountFramesDisp = 0;
HITCOUNT_TABLE	gHitCountTable[] = {

#endif
		// label				expand		level
HITENTRY(PARTICLES,				TRUE,			0)
HITENTRY(PART_ROPES,			TRUE,			1)
HITENTRY(PART_SYSTEMS,			TRUE,			1)
HITENTRY(PART_GETVALUE,			TRUE,			1)
HITENTRY(OTHER_GETVALUE,		TRUE,			0)
HITENTRY(DRAW_STATES,			TRUE,			0)
HITENTRY(FRUSTUM_CULL,			TRUE,			0)
HITENTRY(DRAW_UIMODEL,			TRUE,			0)
HITENTRY(UI_SCHED_PROC_IMMED,	TRUE,			0)
HITENTRY(UI_SCHED_PROC_TIMED,	TRUE,			0)
HITENTRY(MODEL_SETLOC,			TRUE,			0)
HITENTRY(MODEL_SETLOC_SKIP,		TRUE,			0)
HITENTRY(LEVEL_FIRST_ROOM,		TRUE,			0)
HITENTRY(LEVEL_NEXT_ROOM,		TRUE,			0)


#ifndef INCLUDE_PERFORMANCE_TABLE
HITCOUNT_LAST,
#endif 

};


